module Scrapegraphai
  module Models
    type crawl_retrieve_results_response =
      {
        result: Scrapegraphai::Models::CrawlRetrieveResultsResponse::result,
        status: Scrapegraphai::Models::CrawlRetrieveResultsResponse::status,
        task_id: String,
        traceback: String?
      }

    class CrawlRetrieveResultsResponse < Scrapegraphai::Internal::Type::BaseModel
      attr_reader result: Scrapegraphai::Models::CrawlRetrieveResultsResponse::result?

      def result=: (
        Scrapegraphai::Models::CrawlRetrieveResultsResponse::result
      ) -> Scrapegraphai::Models::CrawlRetrieveResultsResponse::result

      attr_reader status: Scrapegraphai::Models::CrawlRetrieveResultsResponse::status?

      def status=: (
        Scrapegraphai::Models::CrawlRetrieveResultsResponse::status
      ) -> Scrapegraphai::Models::CrawlRetrieveResultsResponse::status

      attr_reader task_id: String?

      def task_id=: (String) -> String

      attr_accessor traceback: String?

      def initialize: (
        ?result: Scrapegraphai::Models::CrawlRetrieveResultsResponse::result,
        ?status: Scrapegraphai::Models::CrawlRetrieveResultsResponse::status,
        ?task_id: String,
        ?traceback: String?
      ) -> void

      def to_hash: -> {
        result: Scrapegraphai::Models::CrawlRetrieveResultsResponse::result,
        status: Scrapegraphai::Models::CrawlRetrieveResultsResponse::status,
        task_id: String,
        traceback: String?
      }

      type result = top | String

      module Result
        extend Scrapegraphai::Internal::Type::Union

        def self?.variants: -> ::Array[Scrapegraphai::Models::CrawlRetrieveResultsResponse::result]
      end

      type status =
        :PENDING | :STARTED | :SUCCESS | :FAILURE | :RETRY | :REVOKED

      module Status
        extend Scrapegraphai::Internal::Type::Enum

        PENDING: :PENDING
        STARTED: :STARTED
        SUCCESS: :SUCCESS
        FAILURE: :FAILURE
        RETRY: :RETRY
        REVOKED: :REVOKED

        def self?.values: -> ::Array[Scrapegraphai::Models::CrawlRetrieveResultsResponse::status]
      end
    end
  end
end
